let feeds=[],filteredFeeds=[];const fileInput=document.getElementById("fileInput"),uploadArea=document.querySelector(".upload-area");function handleFileUpload(e){const t=e.target.files[0];t&&handleFile(t)}function handleFile(e){if(!e.name.toLowerCase().endsWith(".opml")&&!e.name.toLowerCase().endsWith(".xml"))return void showNotification("Please select an OPML or XML file","error");const t=new FileReader;t.onload=function(e){try{parseOPML(e.target.result),showNotification("OPML file loaded successfully!","success")}catch(e){showNotification("Error parsing OPML file: "+e.message,"error")}},t.readAsText(e)}function parseOPML(e){const t=(new DOMParser).parseFromString(e,"text/xml");if(t.getElementsByTagName("parsererror").length>0)throw new Error("Invalid XML format");const n=t.getElementsByTagName("outline");feeds=[];for(let e=0;e<n.length;e++){const t=n[e],d=t.getAttribute("xmlUrl"),s=t.getAttribute("htmlUrl");d&&feeds.push({id:e,title:t.getAttribute("title")||t.getAttribute("text")||"Untitled Feed",xmlUrl:d,htmlUrl:s||d,description:t.getAttribute("description")||"",category:t.getAttribute("category")||"",selected:!0})}if(0===feeds.length)throw new Error("No valid feeds found in OPML file");filteredFeeds=[...feeds],renderFeeds(),showFeedsSection(),updateStats()}function renderFeeds(){const e=document.getElementById("feedsGrid");e.innerHTML="",0!==filteredFeeds.length?(filteredFeeds.forEach((t=>{const n=document.createElement("div");n.className=`feed-card ${t.selected?"selected":""} fade-in`,n.innerHTML=`\n                    <div class="feed-header">\n                        <div class="feed-title">${escapeHtml(t.title)}</div>\n                        <div class="checkbox ${t.selected?"checked":""}" onclick="toggleFeed(${t.id})"></div>\n                    </div>\n                    <div class="feed-url">${escapeHtml(t.xmlUrl)}</div>\n                    ${t.description?`<div class="feed-description">${escapeHtml(t.description)}</div>`:""}\n                    <div class="feed-actions">\n                        <a href="${escapeHtml(t.htmlUrl)}" target="_blank" class="feed-link">üîó Visit Site</a>\n                        <a href="${escapeHtml(t.xmlUrl)}" target="_blank" class="feed-link">üì° RSS Feed</a>\n                    </div>\n                `,e.appendChild(n)})),updateFeedsCount()):e.innerHTML='\n                    <div class="empty-state">\n                        <div class="empty-icon">üîç</div>\n                        <div class="empty-text">No feeds match your search</div>\n                        <div class="empty-subtext">Try adjusting your search terms</div>\n                    </div>\n                '}function toggleFeed(e){const t=feeds.find((t=>t.id===e));t&&(t.selected=!t.selected,renderFeeds(),updateStats())}function selectAll(){feeds.forEach((e=>e.selected=!0)),renderFeeds(),updateStats(),showNotification("All feeds selected","info")}function deselectAll(){feeds.forEach((e=>e.selected=!1)),renderFeeds(),updateStats(),showNotification("All feeds deselected","info")}function removeSelected(){const e=feeds.filter((e=>e.selected)).length;0!==e?confirm(`Are you sure you want to remove ${e} selected feed(s)?`)&&(feeds=feeds.filter((e=>!e.selected)),filterFeeds(),updateStats(),showNotification(`${e} feed(s) removed`,"success")):showNotification("No feeds selected for removal","error")}function filterFeeds(){const e=document.getElementById("searchInput").value.toLowerCase();filteredFeeds=feeds.filter((t=>t.title.toLowerCase().includes(e)||t.xmlUrl.toLowerCase().includes(e)||t.description.toLowerCase().includes(e))),renderFeeds()}function showFeedsSection(){document.getElementById("feedsSection").style.display="block",document.getElementById("emptyState").style.display="none"}function updateFeedsCount(){const e=filteredFeeds.length,t=feeds.length;document.getElementById("feedsCount").textContent=e===t?`${e} feeds loaded`:`${e} of ${t} feeds shown`}function updateStats(){const e=feeds.length,t=feeds.filter((e=>e.selected)).length;document.getElementById("totalFeeds").textContent=e,document.getElementById("selectedFeeds").textContent=t}function exportOPML(){const e=feeds.filter((e=>e.selected));if(0===e.length)return void showNotification("No feeds selected for export","error");const t=document.getElementById("exportText");t.innerHTML='<span class="loading"></span>Generating...',setTimeout((()=>{downloadOPML(generateOPML(e)),t.innerHTML="üì• Download OPML",showNotification(`${e.length} feeds exported successfully!`,"success")}),1e3)}function generateOPML(e){const t=(new Date).toUTCString();let n=`<?xml version="1.0" encoding="UTF-8"?>\n<opml version="2.0">\n    <head>\n        <title>My RSS Feeds</title>\n        <dateCreated>${t}</dateCreated>\n        <dateModified>${t}</dateModified>\n        <ownerName>OPML Feed Manager</ownerName>\n    </head>\n    <body>\n`;return e.forEach((e=>{n+=`        <outline text="${escapeXml(e.title)}" title="${escapeXml(e.title)}" type="rss" xmlUrl="${escapeXml(e.xmlUrl)}" htmlUrl="${escapeXml(e.htmlUrl)}"`,e.description&&(n+=` description="${escapeXml(e.description)}"`),e.category&&(n+=` category="${escapeXml(e.category)}"`),n+="/>\n"})),n+="    </body>\n</opml>",n}function downloadOPML(e){const t=new Blob([e],{type:"application/xml"}),n=URL.createObjectURL(t),d=document.createElement("a");d.href=n,d.download=`feeds_${(new Date).toISOString().split("T")[0]}.opml`,document.body.appendChild(d),d.click(),document.body.removeChild(d),URL.revokeObjectURL(n)}function showNotification(e,t){const n=document.createElement("div");n.className=`notification ${t}`,n.textContent=e,document.body.appendChild(n),setTimeout((()=>n.classList.add("show")),100),setTimeout((()=>{n.classList.remove("show"),setTimeout((()=>document.body.removeChild(n)),300)}),3e3)}function escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}function escapeXml(e){return e.replace(/[<>&'"]/g,(function(e){switch(e){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";case"'":return"&apos;";case'"':return"&quot;"}}))}fileInput.addEventListener("change",handleFileUpload),uploadArea.addEventListener("dragover",(e=>{e.preventDefault(),uploadArea.classList.add("dragover")})),uploadArea.addEventListener("dragleave",(()=>{uploadArea.classList.remove("dragover")})),uploadArea.addEventListener("drop",(e=>{e.preventDefault(),uploadArea.classList.remove("dragover");const t=e.dataTransfer.files;t.length>0&&handleFile(t[0])})),document.getElementById("searchInput").addEventListener("input",filterFeeds),document.addEventListener("keydown",(e=>{if(e.ctrlKey||e.metaKey)switch(e.key){case"a":e.preventDefault(),selectAll();break;case"d":e.preventDefault(),deselectAll();break;case"s":e.preventDefault(),feeds.length>0&&exportOPML();break;case"f":e.preventDefault(),document.getElementById("searchInput").focus();break}})),updateStats();