const themeToggle=document.querySelector(".theme-toggle"),prefersDarkScheme=window.matchMedia("(prefers-color-scheme: dark)");document.documentElement.setAttribute("data-theme",prefersDarkScheme.matches?"dark":"light"),themeToggle.addEventListener("click",(()=>{const e="dark"===document.documentElement.getAttribute("data-theme")?"light":"dark";document.documentElement.setAttribute("data-theme",e)}));const tabButtons=document.querySelectorAll(".tab-button"),tabContents=document.querySelectorAll(".tab-content");let currentJSON={};const activateTab=e=>{tabContents.forEach((e=>e.classList.remove("active"))),tabButtons.forEach((e=>e.classList.remove("active"))),document.getElementById(e).classList.add("active"),document.querySelector(`[data-tab="${e}"]`).classList.add("active")};tabButtons.forEach((e=>{e.addEventListener("click",(e=>{activateTab(e.target.dataset.tab)}))}));const copyToClipboard=async(e,t)=>{try{await navigator.clipboard.writeText(e);const n=t.textContent;t.textContent="Copied!",t.style.backgroundColor="var(--success-color)",setTimeout((()=>{t.textContent=n,t.style.backgroundColor=""}),2e3)}catch(e){alert("Failed to copy to clipboard")}};function normalizeServiceName(e){return e.toLowerCase().trim()}function capitalizeFirstLetter(e){const t=e.match(/[a-zA-Z]/);if(!t)return e;const n=t.index;return e.slice(0,n)+e[n].toUpperCase()+e.slice(n+1)}function normalizeValue(e){if(!e)return"❌";const t=e.toString().toLowerCase().trim();return"yes"===t||"✅"===t?"✅":"❌"}document.getElementById("convertToJsonBtn").addEventListener("click",(()=>{const e=document.getElementById("markdownInput").value.trim(),t=document.getElementById("jsonOutput"),n=document.getElementById("selectJsonBtn");if(!e)return t.textContent="Please paste a Markdown table.",void(n.style.display="none");try{const o=e.split("\n").map((e=>e.trim()));if(o.length<2)throw new Error("Invalid Markdown table");const[r,...a]=o,c=r.split("|").map((e=>e.trim())).filter(Boolean).map((e=>e.replace(/\*\*/g,""))),s={};a.forEach((e=>{if(e.startsWith("|")&&!e.includes("-")){const t=e.split("|").map((e=>e.trim())).filter(Boolean).map((e=>e.replace(/\*\*/g,"")));if(t.length>0){const e=t[0];s[e]={};for(let n=1;n<t.length;n++){const o=t[n];"✅"===o||"yes"===o.toLowerCase()?s[e][c[n]]="✅":("❌"===o||o.toLowerCase(),s[e][c[n]]="❌")}}}})),currentJSON=s,t.textContent=JSON.stringify(s,null,2),n.style.display="block"}catch(e){t.textContent=`Error: ${e.message}`,n.style.display="none"}})),document.getElementById("updateJsonBtn").addEventListener("click",(()=>{const e=document.getElementById("existingJsonInput").value.trim(),t=document.getElementById("newProviderName").value.trim(),n=document.getElementById("supportedServices").value.trim(),o=document.getElementById("updatedJsonOutput"),r=document.getElementById("selectUpdatedJsonBtn");if(!t||!n)return o.textContent="Please enter both provider name and supported services.",void(r.style.display="none");try{let a=e?JSON.parse(e):currentJSON;if(0===Object.keys(a).length)throw new Error("No valid JSON data provided");const c=n.split(",").map((e=>normalizeServiceName(e))),s={};Object.entries(a).forEach((([e,t])=>{const n=normalizeServiceName(e);s[n]={},Object.entries(t).forEach((([e,t])=>{s[n][e]=normalizeValue(t)}))})),Object.keys(s).forEach((e=>{s[e][t]=c.includes(normalizeServiceName(e))?"✅":"❌"})),c.forEach((e=>{if(!Object.keys(s).some((t=>normalizeServiceName(t)===e))){s[e]={};const n=Object.keys(s)[0];Object.keys(s[n]).forEach((t=>{s[e][t]="❌"})),s[e][t]="✅"}}));const d={};Object.entries(s).forEach((([e,t])=>{d[capitalizeFirstLetter(e)]=t})),currentJSON=d,o.textContent=JSON.stringify(d,null,2),r.style.display="block"}catch(e){o.textContent=`Error: ${e.message}`,r.style.display="none"}})),document.getElementById("convertToMarkdownBtn").addEventListener("click",(()=>{const e=document.getElementById("inputJsonForMarkdown").value.trim(),t=document.getElementById("markdownOutput"),n=document.getElementById("selectMarkdownBtn");try{let o=e?JSON.parse(e):currentJSON;if(0===Object.keys(o).length)throw new Error("No valid JSON data provided");const r={};Object.entries(o).forEach((([e,t])=>{r[e]={},Object.entries(t).forEach((([t,n])=>{r[e][t]=normalizeValue(n)}))}));const a=Object.keys(r),c=Object.keys(r[a[0]]);let s=[`| **Service Name** | ${c.map((e=>`**${e}**`)).join(" | ")} |`,`| ${":---".repeat(1)} | ${c.map((()=>":---")).join(" | ")} |`,...a.map((e=>`| ${e} | ${c.map((t=>r[e][t]||"❌")).join(" | ")} |`))].join("\n");t.textContent=s,n.style.display="block"}catch(e){t.textContent=`Error: ${e.message}`,n.style.display="none"}})),document.getElementById("selectJsonBtn").addEventListener("click",(()=>{copyToClipboard(document.getElementById("jsonOutput").textContent,document.getElementById("selectJsonBtn"))})),document.getElementById("selectUpdatedJsonBtn").addEventListener("click",(()=>{copyToClipboard(document.getElementById("updatedJsonOutput").textContent,document.getElementById("selectUpdatedJsonBtn"))})),document.getElementById("selectMarkdownBtn").addEventListener("click",(()=>{copyToClipboard(document.getElementById("markdownOutput").textContent,document.getElementById("selectMarkdownBtn"))})),activateTab("markdownToJson");