let comparisonResults={matches:[],uniqueA:[],uniqueB:[]};function initializeApp(){loadCachedData(),setupEventListeners()}function setupEventListeners(){document.getElementById("fileA").addEventListener("change",handleFileUpload),document.getElementById("fileB").addEventListener("change",handleFileUpload),document.getElementById("textA").addEventListener("input",saveCachedData),document.getElementById("textB").addEventListener("input",saveCachedData),document.getElementById("compareBtn").addEventListener("click",compareLists),document.getElementById("textA").addEventListener("blur",saveCachedData),document.getElementById("textB").addEventListener("blur",saveCachedData)}function handleFileUpload(e){const t=e.target.files[0],n=e.target.id,a="fileA"===n?"textA":"textB",i="fileA"===n?"fileNameA":"fileNameB";if(t){document.getElementById(i).textContent=t.name;const e=new FileReader;e.onload=function(e){const t=e.target.result;document.getElementById(a).value=t,saveCachedData()},e.readAsText(t)}}function saveCachedData(){const e={listA:document.getElementById("textA").value,listB:document.getElementById("textB").value,timestamp:Date.now()};try{window.cachedData=e}catch(e){}}function loadCachedData(){try{const e=window.cachedData;e&&(document.getElementById("textA").value=e.listA||"",document.getElementById("textB").value=e.listB||"")}catch(e){}}function compareLists(){const e=document.getElementById("textA").value.trim(),t=document.getElementById("textB").value.trim();e&&t?(document.getElementById("loading").style.display="block",document.getElementById("results").classList.remove("show"),document.getElementById("compareBtn").disabled=!0,setTimeout((()=>{performComparison(e,t)}),500)):alert("Please provide both lists to compare")}function performComparison(e,t){const n=fuzzyMatch(parseList(e),parseList(t));comparisonResults=n,displayResults(n),document.getElementById("loading").style.display="none",document.getElementById("results").classList.add("show"),document.getElementById("compareBtn").disabled=!1}function parseList(e){return e.split("\n").map((e=>e.trim())).filter((e=>e.length>0))}function fuzzyMatch(e,t){const n=[],a=new Set,i=new Set;for(let o=0;o<e.length;o++){if(a.has(o))continue;const s=e[o];let l=null,c=0,u=-1;for(let e=0;e<t.length;e++){if(i.has(e))continue;const n=t[e],a=calculateSimilarity(s,n);a>.8&&a>c&&(l=n,c=a,u=e)}l&&(n.push({songA:s,songB:l,similarity:c}),a.add(o),i.add(u))}return{matches:n,uniqueA:e.filter(((e,t)=>!a.has(t))),uniqueB:t.filter(((e,t)=>!i.has(t)))}}function calculateSimilarity(e,t){const n=e=>e.toLowerCase().replace(/[^\w\s]/g,"").replace(/\s+/g," ").trim(),a=n(e),i=n(t);if(a===i)return 1;const o=levenshteinDistance(a,i),s=Math.max(a.length,i.length);return 0===s?1:(s-o)/s}function levenshteinDistance(e,t){const n=[];for(let e=0;e<=t.length;e++)n[e]=[e];for(let t=0;t<=e.length;t++)n[0][t]=t;for(let a=1;a<=t.length;a++)for(let i=1;i<=e.length;i++)t.charAt(a-1)===e.charAt(i-1)?n[a][i]=n[a-1][i-1]:n[a][i]=Math.min(n[a-1][i-1]+1,n[a][i-1]+1,n[a-1][i]+1);return n[t.length][e.length]}function displayResults(e){document.getElementById("matchCount").textContent=e.matches.length,document.getElementById("uniqueACount").textContent=e.uniqueA.length,document.getElementById("uniqueBCount").textContent=e.uniqueB.length,document.getElementById("matchBadge").textContent=e.matches.length,document.getElementById("uniqueABadge").textContent=e.uniqueA.length,document.getElementById("uniqueBBadge").textContent=e.uniqueB.length,displaySongList("matchesList",e.matches.map((e=>e.songA))),displaySongList("uniqueAList",e.uniqueA),displaySongList("uniqueBList",e.uniqueB)}function displaySongList(e,t){const n=document.getElementById(e);if(0===t.length)return void(n.innerHTML='<div class="empty-state">No songs found</div>');const a=t.map((e=>`<div class="song-item">${escapeHtml(e)}</div>`)).join("");n.innerHTML=a}function escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}function exportList(e){let t,n;switch(e){case"matches":t=comparisonResults.matches.map((e=>e.songA)),n="matching_songs.txt";break;case"uniqueA":t=comparisonResults.uniqueA,n="unique_list_a.txt";break;case"uniqueB":t=comparisonResults.uniqueB,n="unique_list_b.txt";break;default:return}if(0===t.length)return void alert("No data to export");const a=t.join("\n"),i=new Blob([a],{type:"text/plain"}),o=URL.createObjectURL(i),s=document.createElement("a");s.href=o,s.download=n,s.click(),URL.revokeObjectURL(o)}document.addEventListener("DOMContentLoaded",(function(){initializeApp()}));